using System;
using Refit;
using System.Collections.Generic;
using System.Threading.Tasks;
using xdcb.QuanLyVon.GiaiNgan.Dtos;

namespace xdcb.FormServices.SDK
{
	/// <summary>
	/// Generated ISDK for Table : GiaiNgan.
	/// </summary>
	public interface IGiaiNgansApi
	{
		#region Generated By Column

		[Get("/api/app/GiaiNgan")]
		Task<List<GiaiNganDto>> GetListAsync();

		[Post("/api/app/GiaiNgan")]
		Task<GiaiNganDto> Create([Body] CreateUpdateGiaiNganDto info);

		[Get("/api/app/GiaiNgan/{Id}")]
		Task<GiaiNganDto> GetAsync(Guid Id);

		[Put("/api/app/GiaiNgan/{Id}")]
		Task<GiaiNganDto> Update(Guid Id, [Body] CreateUpdateGiaiNganDto info);

		[Delete("/api/app/GiaiNgan/{Id}")]
		Task Delete(Guid Id);

		[Get("/api/app/chuDauTu/{id}/giaiNgan")]
		Task<List<GiaiNganDto>> GetListByChuDauTuIdAsync(Guid id);

		[Delete("/api/app/chuDauTu/{id}/giaiNgan")]
		Task DeleteByChuDauTuId(Guid id);

		#endregion

		#region Property
		[Get("/api/app/giaiNgan/searchData/{chuDauTuId}")]
		Task<List<GiaiNganDto>> GetSearchData(int nam, bool? isKeHoachKeoDai, Guid chuDauTuId);

		[Get("/api/app/giaiNgan/groupData/{chuDauTuId}")]
		Task<List<GiaiNganDto>> GetGroupData(int nam, bool? isKeHoachKeoDai, Guid chuDauTuId);

		[Get("/api/app/giaiNgan/notificationIsNew/{chuDauTuId}")]
		Task<GiaiNganDto> GetNotificationIsNew(int nam, bool isKeHoachKeoDai, string tenKeHoach, int quyThang, Guid chuDauTuId);

		[Get("/api/app/giaiNgan/objectYear")]
		Task<List<int>> GetObjectYear();
		#endregion
	}
}