@using DevExtreme.AspNet.Mvc
@model xdcb.HoSoCongTrinh.Dtos.HoSoCongTrinhChiTietViewModel

<div class="row">
    <div class="col-6">
        <h6>Tổng hợp kết quả thẩm định về căn cứ pháp lý</h6>
    </div>
    <div class="col-12">
        @(Html.DevExtreme().DataGrid<xdcb.HoSoCongTrinh.Dtos.KetQuaThamDinhPhapLyDto>()
            .NoDataText("Không có dữ liệu")
            .ShowBorders(true)
            .WordWrapEnabled(true)
            .Columns(
                columns => {
                    columns.Add().Caption("#").Width(60)
                        .Alignment(HorizontalAlignment.Left)
                        .AllowEditing(false)
                        .CellTemplate(new JS("orderRowItemNo"));

                    columns.AddFor(m => m.TenNoiDungKiemTra);

                    columns.AddFor(m => m.IsKetQuaThamDinh);
                })
            .DataSource(@Model.ThamDinhGoiThau.CanCuPhapLys)
            .Paging(paging => paging.Enabled(false))
        )
    </div>
</div>

<div class="row mt-2">
    <div class="col-12">
        <h6>Ý kiến thẩm định về căn cứ pháp lý</h6>
        <span>@Model.ThamDinhGoiThau.YKienThamDinhCanCuPhapLy</span>
    </div>
</div>

<h6 class="mt-3">Ý KIẾN THẨM ĐỊNH CỦA CƠ QUAN THẨM ĐỊNH</h6>
<div class="row pl-4 pr-2">
    <div class="row pt-2">
        <div class="col-sm-6">
            <h6>Phần công việc đã thực hiện</h6>
        </div>
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<xdcb.HoSoCongTrinh.Dtos.CongViecThucHienDto>()
                .NoDataText("Không có dữ liệu")
                .ShowBorders(true)
                .WordWrapEnabled(true)
                .Columns(
                    columns => {
                        columns.Add().DataField("Stt").Caption("#").Width(60)
                            .Alignment(HorizontalAlignment.Left)
                            .AllowEditing(false)
                            .CellTemplate(new JS("orderRowItemNo"));

                        columns.AddFor(m => m.TenNoiDungCongViec);

                        columns.AddFor(m =>m.DonViThucHien);

                        columns.AddFor(m => m.GiaTriThucHien)
                            .Alignment(HorizontalAlignment.Left)
                            .DataType(GridColumnDataType.Number)
                            .Format(f => f.Type(Format.FixedPoint).Precision(2))
                            .EditorOptions(new { format = "#,###.##", showClearButton = true });
                    })
                .Summary(s => s.TotalItems(items =>
                    {
                        items.Add()
                        .Name("TongGiaTriThucHien")
                        .ShowInColumn("DonViThucHien")
                        .SummaryType(SummaryType.Custom)
                        .Alignment(HorizontalAlignment.Left);

                        items.Add()
                            .Name("GiaTriThucHienRowsSummary")
                            .ShowInColumn("GiaTriThucHien")
                            .SummaryType(SummaryType.Custom)
                            .ValueFormat(f => f.Type(Format.FixedPoint).Precision(2))
                            .Alignment(HorizontalAlignment.Left);
                    })
                    .CalculateCustomSummary(@<text>
                        function (options) {
                            if (options.name === "GiaTriThucHienRowsSummary") {
                                if (options.summaryProcess === "start") {
                                    options.totalValue = 0;
                                }
                                if (options.summaryProcess === "calculate") {
                                    options.totalValue = options.totalValue + options.value.GiaTriThucHien;
                                }
                            }
                            else {
                                options.totalValue = "Tổng giá trị thực hiện";
                            }
                        }
                    </text>)
                    )
                .DataSource(@Model.ThamDinhGoiThau.CongViecThucHiens)
                .Paging(paging => paging.Enabled(false))
            )
        </div>
    </div>
    <div class="row pt-2">
        <div class="col-6">
            <h6>Phần công việc không áp dụng được một trong các hình thức lựa chọn nhà thầu</h6>
        </div>
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<xdcb.HoSoCongTrinh.Dtos.CongViecKhongApDungDto>()
                .NoDataText("Không có dữ liệu")
                .ShowBorders(true)
                .WordWrapEnabled(true)
                .Columns(
                    columns => {
                        columns.Add().DataField("Stt").Caption("#").Width(60)
                            .Alignment(HorizontalAlignment.Left)
                            .AllowEditing(false)
                            .CellTemplate(new JS("orderRowItemNo"));

                        columns.AddFor(m => m.TenNoiDungCongViec);

                        columns.AddFor(m => m.TenDonViThucHien);

                        columns.AddFor(m => m.GiaTriThucHien)
                            .Alignment(HorizontalAlignment.Left)
                            .DataType(GridColumnDataType.Number)
                            .Format(f => f.Type(Format.FixedPoint).Precision(2))
                            .EditorOptions(new { format = "#,###.##", showClearButton = true });
                    })
                .Summary(s => s.TotalItems(items =>
                    {
                        items.Add()
                        .Name("TongGiaTriThucHien")
                        .ShowInColumn("TenDonViThucHien")
                        .SummaryType(SummaryType.Custom)
                        .Alignment(HorizontalAlignment.Left);

                        items.Add()
                            .Name("GiaTriThucHienRowsSummary")
                            .ShowInColumn("GiaTriThucHien")
                            .SummaryType(SummaryType.Custom)
                            .ValueFormat(f => f.Type(Format.FixedPoint).Precision(2))
                            .Alignment(HorizontalAlignment.Left);
                    })
                    .CalculateCustomSummary(@<text>
                        function (options) {
                            if (options.name === "GiaTriThucHienRowsSummary") {
                                if (options.summaryProcess === "start") {
                                    options.totalValue = 0;
                                }
                                if (options.summaryProcess === "calculate") {
                                    options.totalValue = options.totalValue + options.value.GiaTriThucHien;
                                }
                            }
                            else {
                                options.totalValue = "Tổng giá trị thực hiện";
                            }
                        }
                    </text>)
                    )
                .DataSource(@Model.ThamDinhGoiThau.CongViecKhongApDungs)
                .Paging(paging => paging.Enabled(false))
            )
        </div>
    </div>
    <div class="row pt-2">
        <div class="col-6">
            <h6>Phần công việc thuộc kế hoạch lựa chọn nhà thầu</h6>
        </div>
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<xdcb.HoSoCongTrinh.Dtos.CongViecThuocKeHoachDto>()
                .NoDataText("Không có dữ liệu")
                .ShowBorders(true)
                .WordWrapEnabled(true)
                .Columns(
                    columns => {
                        columns.Add().DataField("Stt").Caption("#").Width(60)
                            .Alignment(HorizontalAlignment.Left)
                            .AllowEditing(false)
                            .CellTemplate(new JS("orderRowItemNo"));

                        columns.AddFor(m => m.TenNoiDungKiemTra);

                        columns.AddFor(m => m.IsTuanThuPhuHop);
                    })
                .DataSource(@Model.ThamDinhGoiThau.CongViecThuocKeHoachs)
                .Paging(paging => paging.Enabled(false))
            )
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-6">
            <h6>Phần công việc chưa đủ điều kiện lập kế hoạch lựa chọn nhà thầu</h6>
        </div>
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<xdcb.HoSoCongTrinh.Dtos.CongViecChuaDuDieuKienLapKeHoachDto>()
                .NoDataText("Không có dữ liệu")
                .ShowBorders(true)
                .WordWrapEnabled(true)
                .Columns(
                    columns => {
                        columns.Add().DataField("Stt").Caption("#").Width(60)
                            .Alignment(HorizontalAlignment.Left)
                            .AllowEditing(false)
                            .CellTemplate(new JS("orderRowItemNo"));

                        columns.AddFor(m => m.TenNoiDungKiemTra);

                        columns.AddFor(m => m.GiaTri)
                            .Alignment(HorizontalAlignment.Left)
                            .DataType(GridColumnDataType.Number)
                            .Format(f => f.Type(Format.FixedPoint).Precision(2))
                            .EditorOptions(new { format = "#,###.##", showClearButton = true });
                    })
                .Summary(s => s.TotalItems(items =>
                    {
                        items.Add()
                        .Name("TongGiaTri")
                        .ShowInColumn("TenNoiDungKiemTra")
                        .SummaryType(SummaryType.Custom)
                        .Alignment(HorizontalAlignment.Left);

                        items.Add()
                            .Name("GiaTriRowsSummary")
                            .ShowInColumn("GiaTri")
                            .SummaryType(SummaryType.Custom)
                            .ValueFormat(f => f.Type(Format.FixedPoint).Precision(2))
                            .Alignment(HorizontalAlignment.Left);
                    })
                    .CalculateCustomSummary(@<text>
                        function (options) {
                            if (options.name === "GiaTriRowsSummary") {
                                if (options.summaryProcess === "start") {
                                    options.totalValue = 0;
                                }
                                if (options.summaryProcess === "calculate") {
                                    options.totalValue = options.totalValue + options.value.GiaTri;
                                }
                            }
                            else {
                                options.totalValue = "Tổng giá trị các phần công việc";
                            }
                        }
                    </text>)
                    )
                .DataSource(@Model.ThamDinhGoiThau.CongViecChuaDuDieuKienLapKeHoachs)
                .Paging(paging => paging.Enabled(false))
            )
        </div>
    </div>

    <div class="col-12 pt-2">
        <h6>Ý kiến thẩm định về nội dung kế hoạch lựa chọn nhà thầu</h6>
        <span>@Model.ThamDinhGoiThau.YKienThamDinhNoiDungKeHoach</span>
    </div>
    <div class="col-12 pl-0 pr-0">
        <h6>Ý kiến thẩm định về tổng giá trị của các phần công việc</h6>
        <span>@Model.ThamDinhGoiThau.YKienThamDinhGiaTriCongViec</span>
    </div>
</div>

<div class="row mt-3">
    <div class="col-6">
        <h6>KIẾN NGHỊ</h6>
    </div>
    <div class="col-12">
        @(Html.DevExtreme().TreeList<xdcb.HoSoCongTrinh.Dtos.HoSoCongTrinhChiTietGoiThauDto>()
        .NoDataText("Không có dữ liệu")
        .DataSource(@Model.ThamDinhGoiThau.GoiThauThamDinhs)
        .KeyExpr("GoiThauId")
        .ParentIdExpr("GoiThauParentId")
        .RootValue(Guid.Empty)
        .AutoExpandAll(true)
        .ColumnAutoWidth(true)
        .WordWrapEnabled(true)
        .ShowBorders(true)
        .Columns(columns => {
            columns.AddFor(m => m.GoiThauId)
                .Lookup(lookup => lookup
                    .DataSource("getGoiThauThamDinhs")
                    .ValueExpr("id")
                    .DisplayExpr("tenGoiThau")
                );

            columns.AddFor(m => m.GiaGoiThau)
                .Alignment(HorizontalAlignment.Left)
                .DataType(GridColumnDataType.Number)
                .Format(f => f.Type(Format.FixedPoint).Precision(2))
                .EditorOptions(new { format = "#,###.##", showClearButton = true });

            columns.AddFor(m => m.TenHinhThucLuaChonNhaThau);

            columns.AddFor(m => m.TenPhuongThucLuaChonNhaThau);

            columns.AddFor(m => m.ThoiGianBatDau);

            columns.AddFor(m => m.TenLoaiHopDong);

            columns.AddFor(m => m.ThoiGianThucHien);
        })
        .Paging(paging => paging.Enabled(false))
    )
    </div>
</div>

<div class="row mt-3">
    <div class="col-12">
        <div class="form-group">
            <h6>NỘI DUNG TRÌNH VÀ KIẾN NGHỊ</h6>
            @(Html.DevExtreme().HtmlEditor()
                .Height(300)
                .ReadOnly(true)
                .Content(@Model.ThamDinhGoiThau.NoiDungTrinhVaKienNghi)
                .Toolbar(toolbar => toolbar.Items(
                    items => {
                        items.Add().FormatName(HtmlEditorToolbarItem.Bold);

                        items.Add().FormatName(HtmlEditorToolbarItem.Italic);

                        items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                        items.Add().FormatName(HtmlEditorToolbarItem.OrderedList);

                        items.Add().FormatName(HtmlEditorToolbarItem.BulletList);
                    })
                )
                .MediaResizing(m => m.Enabled(true))
                )
        </div>
    </div>
</div>
