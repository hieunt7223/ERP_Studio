using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using xdcb.QuanLyVon.NhuCauKeHoachVon.Dtos;
using xdcb.QuanLyVon.NhuCauKeHoachVonChiTiet.Dtos;
using xdcb.QuanLyVon.NhuCauKeHoachVons;
using Microsoft.AspNetCore.Hosting;
using xdcb.Common.DanhMuc.CongTrinhs;
using xdcb.Common.DanhMuc.CongTrinhDtos;

namespace xdcb.QuanLyVon.NhuCauKeHoachVonChiTiets
{
    /// <summary>
    /// Generated AppService for Table : NhuCauKeHoachVonChiTiet.
    /// </summary>
    public class NhuCauKeHoachVonChiTietAppService : QuanLyVonAppServiceBase, INhuCauKeHoachVonChiTietAppService
    {
        #region Generated By Column

        private readonly INhuCauKeHoachVonChiTietRepository _iNhuCauKeHoachVonChiTietRepository;
        private readonly INhuCauKeHoachVonAppService _nhuCauKeHoachVon;
        private readonly IHostingEnvironment _env;
        private readonly ICongTrinhAppService _congTrinhAppService;



        public NhuCauKeHoachVonChiTietAppService(INhuCauKeHoachVonChiTietRepository iNhuCauKeHoachVonChiTietRepository, INhuCauKeHoachVonAppService nhuCauKeHoachVon,
            IHostingEnvironment env, ICongTrinhAppService congTrinhAppService)
        {
            _iNhuCauKeHoachVonChiTietRepository = iNhuCauKeHoachVonChiTietRepository;
            _nhuCauKeHoachVon = nhuCauKeHoachVon;
            _env = env;
            _congTrinhAppService = congTrinhAppService;
        }

        public async Task<List<NhuCauKeHoachVonChiTietDto>> GetListAsync()
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false).ToList();
            }
            return new List<NhuCauKeHoachVonChiTietDto>(ObjectMapper.Map<List<NhuCauKeHoachVonChiTiet>, List<NhuCauKeHoachVonChiTietDto>>(items));
        }

        public async Task<NhuCauKeHoachVonChiTietDto> GetAsync(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetAsync(id);
            if (items != null && items.IsDeleted == true)
            {
                items = null;
            }
            return ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(items);
        }

        public async Task<NhuCauKeHoachVonChiTietDto> Create(CreateUpdateNhuCauKeHoachVonChiTietDto input)
        {
            var item = ObjectMapper.Map<CreateUpdateNhuCauKeHoachVonChiTietDto, NhuCauKeHoachVonChiTiet>(input);
            var data = await _iNhuCauKeHoachVonChiTietRepository.InsertAsync(item, true);
            return ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(data);
        }

        public async Task<NhuCauKeHoachVonChiTietDto> Update(Guid id, CreateUpdateNhuCauKeHoachVonChiTietDto input)
        {
            var item = await _iNhuCauKeHoachVonChiTietRepository.GetAsync(id);
            if (item != null && item.IsDeleted == false)
            {
                item.NhuCauKeHoachVonID = input.NhuCauKeHoachVonID;
                item.CongTrinhID = input.CongTrinhID;
                item.LuyKeKhoiLuongNamTruocNST = input.LuyKeKhoiLuongNamTruocNST;
                item.LuyKeVonNamTruocNST = input.LuyKeVonNamTruocNST;
                item.NhuCauVonDauNamNST = input.NhuCauVonDauNamNST;
                item.DieuChinhGiamNST = input.DieuChinhGiamNST;
                item.DieuChinhTangNST = input.DieuChinhTangNST;
                item.NhuCauVonDieuChinhNST = input.NhuCauVonDieuChinhNST;
                item.GhiChuDauNamNST = input.GhiChuDauNamNST;
                item.GhiChuDieuChinhNST = input.GhiChuDieuChinhNST;
                item.GhiChuChuyenVienDauNamNST = input.GhiChuChuyenVienDauNamNST;
                item.GhiChuChuyenVienDieuChinhNST = input.GhiChuChuyenVienDieuChinhNST;
                item.IsSelectNST = input.IsSelectNST;
                item.LuyKeKhoiLuongNamTruocNSTW = input.LuyKeKhoiLuongNamTruocNSTW;
                item.LuyKeVonNamTruocNSTW = input.LuyKeVonNamTruocNSTW;
                item.NhuCauVonDauNamNSTW = input.NhuCauVonDauNamNSTW;
                item.DieuChinhGiamNSTW = input.DieuChinhGiamNSTW;
                item.DieuChinhTangNSTW = input.DieuChinhTangNSTW;
                item.NhuCauVonDieuChinhNSTW = input.NhuCauVonDieuChinhNSTW;
                item.GhiChuDauNamNSTW = input.GhiChuDauNamNSTW;
                item.GhiChuDieuChinhNSTW = input.GhiChuDieuChinhNSTW;
                item.GhiChuChuyenVienDauNamNSTW = input.GhiChuChuyenVienDauNamNSTW;
                item.GhiChuChuyenVienDieuChinhNSTW = input.GhiChuChuyenVienDieuChinhNSTW;
                item.IsSelectNSTW = input.IsSelectNSTW;
                item.LuyKeKhoiLuongNamTruocODA = input.LuyKeKhoiLuongNamTruocODA;
                item.LuyKeVonNamTruocODA = input.LuyKeVonNamTruocODA;
                item.NhuCauVonDauNamODA = input.NhuCauVonDauNamODA;
                item.DieuChinhGiamODA = input.DieuChinhGiamODA;
                item.DieuChinhTangODA = input.DieuChinhTangODA;
                item.NhuCauVonDieuChinhODA = input.NhuCauVonDieuChinhODA;
                item.GhiChuDauNamODA = input.GhiChuDauNamODA;
                item.GhiChuDieuChinhODA = input.GhiChuDieuChinhODA;
                item.GhiChuChuyenVienDauNamODA = input.GhiChuChuyenVienDauNamODA;
                item.GhiChuChuyenVienDieuChinhODA = input.GhiChuChuyenVienDieuChinhODA;
                item.IsSelectODA = input.IsSelectODA;
                item.IsSelect = input.IsSelect;
                item.IsDeleteDieuChinh = input.IsDeleteDieuChinh;
                var data = await _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(item, true);
                return ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(data);
            }
            return ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(item);
        }

        public async Task Delete(Guid id)
        {
            var item = await _iNhuCauKeHoachVonChiTietRepository.GetAsync(id);
            if (item != null && item.IsDeleted == false)
            {
                item.IsDeleted = true;
                await _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(item, true);
            }
        }

        [HttpGet]
        [Route("/api/app/nhuCauKeHoachVon/{id}/nhuCauKeHoachVonChiTiet")]
        public async Task<List<NhuCauKeHoachVonChiTietDto>> GetListByNhuCauKeHoachVonIDAsync(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == id).ToList();
            }
            return new List<NhuCauKeHoachVonChiTietDto>(ObjectMapper.Map<List<NhuCauKeHoachVonChiTiet>, List<NhuCauKeHoachVonChiTietDto>>(items));
        }

        [HttpDelete]
        [Route("/api/app/nhuCauKeHoachVon/{id}/nhuCauKeHoachVonChiTiet")]
        public async Task DeleteByNhuCauKeHoachVonID(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == id).ToList();
                items.ForEach(o =>
                {
                    o.IsDeleted = true;
                    _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(o);
                });
            }
        }

        [HttpGet]
        [Route("/api/app/congTrinh/{id}/nhuCauKeHoachVonChiTiet")]
        public async Task<List<NhuCauKeHoachVonChiTietDto>> GetListByCongTrinhIDAsync(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.CongTrinhID == id).ToList();
            }
            return new List<NhuCauKeHoachVonChiTietDto>(ObjectMapper.Map<List<NhuCauKeHoachVonChiTiet>, List<NhuCauKeHoachVonChiTietDto>>(items));
        }

        [HttpDelete]
        [Route("/api/app/congTrinh/{id}/nhuCauKeHoachVonChiTiet")]
        public async Task DeleteByCongTrinhID(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.CongTrinhID == id).ToList();
                items.ForEach(o =>
                {
                    o.IsDeleted = true;
                    _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(o);
                });
            }
        }
        #endregion

        #region Extra Property

        /// <summary>
        /// Xóa dữ liệu điều chỉnh
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpPut]
        [Route("/api/app/nhuCauKeHoachVonDieuChinhChiTiet/{id}")]
        public async Task DeleteDataDieuChinh(Guid id)
        {
            var item = await _iNhuCauKeHoachVonChiTietRepository.GetAsync(id);
            if (item != null && item.IsDeleted == false)
            {
                item.DieuChinhGiamNST = 0;
                item.DieuChinhTangNST = 0;
                item.NhuCauVonDieuChinhNST = 0;
                item.GhiChuDieuChinhNST = string.Empty;
                item.GhiChuChuyenVienDieuChinhNST = string.Empty;
                item.DieuChinhGiamNSTW = 0;
                item.DieuChinhTangNSTW = 0;
                item.NhuCauVonDieuChinhNSTW = 0;
                item.GhiChuDieuChinhNSTW = string.Empty;
                item.GhiChuChuyenVienDieuChinhNSTW = string.Empty;
                item.DieuChinhGiamODA = 0;
                item.DieuChinhTangODA = 0;
                item.NhuCauVonDieuChinhODA = 0;
                item.GhiChuDieuChinhODA = string.Empty;
                item.GhiChuChuyenVienDieuChinhODA = string.Empty;
                item.IsDeleteDieuChinh = true;
                await _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(item, true);
            }
        }
        [HttpGet]
        public async Task<ResultExportDto> ExportDauNamByNhuCauKeHoachVonID(Guid nhuCauKeHoachVonID)
        {
            List<NhuCauKeHoachVonChiTietDto> list = new List<NhuCauKeHoachVonChiTietDto>();
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == nhuCauKeHoachVonID).ToList();
                if (items != null && items.Count > 0)
                {
                    items.ForEach(o =>
                    {
                        if (!o.IsSelectDieuChinh)
                        {
                            CongTrinhDto congTrinh = _congTrinhAppService.GetCongTrinhDetailAsync(o.CongTrinhID).Result;
                            var obj = ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(o);
                            obj.LuyKeKhoiLuongNamTruocTongCong = obj.LuyKeKhoiLuongNamTruocNST + obj.LuyKeKhoiLuongNamTruocNSTW + obj.LuyKeKhoiLuongNamTruocODA;
                            obj.LuyKeVonNamTruocTongCong = obj.LuyKeVonNamTruocNST + obj.LuyKeVonNamTruocNSTW + obj.LuyKeVonNamTruocODA;
                            obj.NhuCauVonDauNamTongCong = obj.NhuCauVonDauNamNST + obj.NhuCauVonDauNamNSTW + obj.NhuCauVonDauNamODA;
                            obj.DieuChinhGiamTongCong = obj.DieuChinhGiamNST + obj.DieuChinhGiamNSTW + obj.DieuChinhGiamODA;
                            obj.DieuChinhTangTongCong = obj.DieuChinhTangNST + obj.DieuChinhTangNSTW + obj.DieuChinhTangODA;
                            obj.NhuCauVonDieuChinhTongCong = obj.NhuCauVonDieuChinhNST + obj.NhuCauVonDieuChinhNSTW + obj.NhuCauVonDieuChinhODA;
                            obj.STT = list.Count + 1;
                            obj.TenCongTrinh = congTrinh.TenCongTrinh;
                            obj.TenChuDauTu = congTrinh.TenChuDauTu;
                            obj.MaSoDuAn = congTrinh.MaSoDuAn;
                            obj.MaSoChuong = congTrinh.MaChuong;
                            obj.MaLoaiKhoan = congTrinh.MaLoaiKhoan;
                            obj.SoQuyetDinh = congTrinh.SoQuyetDinhDauTu;
                            obj.TongMucDauTu = congTrinh.TongMucDauTu ?? 0;
                            obj.TenLoaiCongTrinh = congTrinh.TenLoaiCongTrinh;
                            obj.TenLoaiKhoan = congTrinh.TenLoaiKhoan;
                            list.Add(obj);
                        }

                    });
                }
            }
            string temFileName = "baocaonhucauvondaunamTemplate.xlsx";

            ResultExportDto result = await ExportExcelAsync(list, nhuCauKeHoachVonID, temFileName);
            return result;
        }

        public async Task<List<NhuCauKeHoachVonChiTietDto>> GetListDataLuyKeByNhuCauKeHoachVonID(Guid nhuCauKeHoachVonID)
        {
            List<NhuCauKeHoachVonChiTietDto> list = new List<NhuCauKeHoachVonChiTietDto>();
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == nhuCauKeHoachVonID).ToList();
                if (items != null && items.Count > 0)
                {
                    items.ForEach(o =>
                    {
                        NhuCauKeHoachVonChiTietDto obj = new NhuCauKeHoachVonChiTietDto();
                        obj.CongTrinhID = o.CongTrinhID;
                        obj.LuyKeVonNamTruocNST = o.NhuCauVonDieuChinhNST;
                        obj.LuyKeVonNamTruocNSTW = o.NhuCauVonDieuChinhNSTW;
                        obj.LuyKeVonNamTruocODA = o.NhuCauVonDieuChinhODA;
                        obj.LuyKeVonNamTruocTongCong = obj.LuyKeVonNamTruocNST + obj.LuyKeVonNamTruocNSTW + obj.LuyKeVonNamTruocODA;
                        list.Add(obj);
                    });
                }
            }
            return list;
        }
        /// <summary>
        /// Lấy dữ liệu chi tiết theo công trình và nhu cầu vốn
        /// </summary>
        /// <param name="nhuCauVonID"></param>
        /// <param name="congtrinhID"></param>
        /// <returns></returns>
        public async Task<List<NhuCauKeHoachVonChiTietDto>> GetListDataByNhuCauVonIDAndCongTrinh(List<Guid> listnhuCauVonID, Guid congtrinhID)
        {
            List<NhuCauKeHoachVonChiTietDto> list = new List<NhuCauKeHoachVonChiTietDto>();
            if (listnhuCauVonID != null && listnhuCauVonID.Count > 0)
            {
                var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
                if (items != null && items.Count > 0)
                {
                    items = items.Where(x => x.IsDeleted == false
                                        && listnhuCauVonID.Contains(x.NhuCauKeHoachVonID)
                                        && (congtrinhID == Guid.Empty || x.CongTrinhID == congtrinhID)
                                        ).ToList();
                    if (items != null && items.Count > 0)
                    {
                        items.ForEach(o =>
                        {
                            var obj = ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(o);
                            obj.LuyKeKhoiLuongNamTruocTongCong = obj.LuyKeKhoiLuongNamTruocNST + obj.LuyKeKhoiLuongNamTruocNSTW + obj.LuyKeKhoiLuongNamTruocODA;
                            obj.LuyKeVonNamTruocTongCong = obj.LuyKeVonNamTruocNST + obj.LuyKeVonNamTruocNSTW + obj.LuyKeVonNamTruocODA;
                            obj.NhuCauVonDauNamTongCong = obj.NhuCauVonDauNamNST + obj.NhuCauVonDauNamNSTW + obj.NhuCauVonDauNamODA;
                            obj.DieuChinhGiamTongCong = obj.DieuChinhGiamNST + obj.DieuChinhGiamNSTW + obj.DieuChinhGiamODA;
                            obj.DieuChinhTangTongCong = obj.DieuChinhTangNST + obj.DieuChinhTangNSTW + obj.DieuChinhTangODA;
                            obj.NhuCauVonDieuChinhTongCong = obj.NhuCauVonDieuChinhNST + obj.NhuCauVonDieuChinhNSTW + obj.NhuCauVonDieuChinhODA;
                            list.Add(obj);
                        });
                    }
                }
            }
            return list;
        }

        public async Task<NhuCauKeHoachVonChiTietDto> GetDataSumValueByNhuCauVonID(Guid nhuCauVonID)
        {
            NhuCauKeHoachVonChiTietDto obj = new NhuCauKeHoachVonChiTietDto();
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false
                                    && x.NhuCauKeHoachVonID == nhuCauVonID
                                    ).ToList();
                if (items != null && items.Count > 0)
                {
                    obj.NhuCauKeHoachVonID = nhuCauVonID;
                    obj.NhuCauVonDauNamTongCong = items.Where(x => x.IsSelectDieuChinh == false).ToList().Sum(x => (x.NhuCauVonDauNamNST + x.NhuCauVonDauNamNSTW + x.NhuCauVonDauNamODA));
                    obj.NhuCauVonDieuChinhTongCong = items.Where(x => x.IsDeleteDieuChinh == false).ToList().Sum(x => (x.NhuCauVonDieuChinhNST + x.NhuCauVonDieuChinhNSTW + x.NhuCauVonDieuChinhODA));
                }
            }
            return obj;
        }
        [HttpPut]
        [Route("/api/app/nhuCauKeHoachVon/{id}/nhuCauKeHoachVonDieuChinhChiTiet")]
        public async Task DeleteDataDieuChinhByNhuCauVonID(Guid id)
        {
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == id).ToList();
                items.ForEach(o =>
                {
                    o.DieuChinhGiamNST = 0;
                    o.DieuChinhTangNST = 0;
                    o.NhuCauVonDieuChinhNST = 0;
                    o.GhiChuDieuChinhNST = string.Empty;
                    o.GhiChuChuyenVienDieuChinhNST = string.Empty;
                    o.DieuChinhGiamNSTW = 0;
                    o.DieuChinhTangNSTW = 0;
                    o.NhuCauVonDieuChinhNSTW = 0;
                    o.GhiChuDieuChinhNSTW = string.Empty;
                    o.GhiChuChuyenVienDieuChinhNSTW = string.Empty;
                    o.DieuChinhGiamODA = 0;
                    o.DieuChinhTangODA = 0;
                    o.NhuCauVonDieuChinhODA = 0;
                    o.GhiChuDieuChinhODA = string.Empty;
                    o.GhiChuChuyenVienDieuChinhODA = string.Empty;
                    o.IsDeleteDieuChinh = true;
                    _iNhuCauKeHoachVonChiTietRepository.UpdateAsync(o);
                });
            }
        }

        //Xuất file excel
        public async Task<ResultExportDto> ExportExcelAsync(List<NhuCauKeHoachVonChiTietDto> data, Guid id, string temFileName)
        {

            ResultExportDto resultExportDto = new ResultExportDto();



            string temFilePath = Path.Combine(_env.ContentRootPath, "wwwroot/Template", temFileName);
            if (string.IsNullOrWhiteSpace(temFilePath))
            {
                resultExportDto.IsExport = false;
                resultExportDto.Msg = Messages.MSG_NotTemplate;
                return resultExportDto;
            }

            string newFileName = "baocaonhucauvon.xlsx";
            string newFilePath = Path.Combine(_env.ContentRootPath, "wwwroot/Tmp", newFileName);

            newFilePath = Common.CoppyFile(newFilePath, temFilePath);
            if (string.IsNullOrWhiteSpace(newFilePath))
            {
                resultExportDto.IsExport = false;
                resultExportDto.Msg = Messages.MSG_NotTemplate;
                return resultExportDto;
            }
            NhuCauKeHoachVonDto nhuCauVon = await _nhuCauKeHoachVon.GetAsync(id);
            List<NhuCauKeHoachVonDto> nhuCauKeHoachVonDtos = new List<NhuCauKeHoachVonDto>();
            nhuCauKeHoachVonDtos.Add(nhuCauVon);

            DataTable dtHeader = Common.ConvertToDataTable<NhuCauKeHoachVonDto>(nhuCauKeHoachVonDtos);
            DataTable dtDetail = Common.ConvertToDataTable<NhuCauKeHoachVonChiTietDto>(SetDetailReport(data));
            DataTable dtSumDetail = Common.ConvertToDataTable<NhuCauKeHoachVonChiTietDto>(SetSumDetailReport(data));
            ExcelExport.ExportWithTemplate(temFilePath, newFilePath, null, dtHeader, dtDetail, dtSumDetail, 0, 1);
            ExcelExport.ExportWithTemplate(temFilePath, newFilePath, null, dtHeader, dtDetail, dtSumDetail, 1, 1);
            if (File.Exists(newFilePath))
            {
                Common.StartProcess(newFilePath);
                resultExportDto.IsExport = true;
                resultExportDto.Path = "/Tmp/" + newFileName;
                return resultExportDto;
            }
            return resultExportDto;

        }

        private List<NhuCauKeHoachVonChiTietDto> SetDetailReport(List<NhuCauKeHoachVonChiTietDto> data)
        {
            List<NhuCauKeHoachVonChiTietDto> listData = new List<NhuCauKeHoachVonChiTietDto>();

            var listLoaiKhoan = GetLoaiKhoan(data);

            foreach (var item in listLoaiKhoan)
            {
                item.IsBold = true;
                listData.Add(item);

                //lấy danh sách loại công trình
                var loaiCongTrinh = GetLoaiCongTrinh(item.LoaiKhoanId, data);

                foreach (var item1 in loaiCongTrinh)
                {
                    item1.IsBold = true;
                    listData.Add(item1);

                    //lấy danh sách công trình
                    var _listCongTrinh = data.Where(x => x.LoaiKhoanId == item.LoaiKhoanId && item1.LoaiCongTrinhId == x.LoaiCongTrinhId).ToList();
                    int index = 1;
                    foreach (var item3 in _listCongTrinh)
                    {
                        item3.SoThuTu = index.ToString();
                        item3.IsBold = false;
                        listData.Add(item3);
                        index++;
                    }

                }
            }

            return listData;
        }

        private List<NhuCauKeHoachVonChiTietDto> GetLoaiKhoan(List<NhuCauKeHoachVonChiTietDto> data)
        {
            List<NhuCauKeHoachVonChiTietDto> listResult = new List<NhuCauKeHoachVonChiTietDto>();
            string[] MyArray = new string[] { "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI" };

            var listLoaiKhoan = data.Select(x => x.LoaiKhoanId).Distinct().ToList();
            for (int i = 0; i < listLoaiKhoan.Count; i++)
            {
                var item = data.FirstOrDefault(x => x.LoaiKhoanId == listLoaiKhoan[i]);
                if (item != null)
                {
                    var loaiKhoan = new NhuCauKeHoachVonChiTietDto();
                    loaiKhoan.TenCongTrinh = item.TenLoaiKhoan;
                    loaiKhoan.SoThuTu = MyArray[i].ToString().ToUpper();
                    loaiKhoan.TongMucDauTu = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.TongMucDauTu);
                    loaiKhoan.LoaiKhoanId = item.LoaiKhoanId;
                    loaiKhoan.LoaiCongTrinhId = item.LoaiCongTrinhId;
                    loaiKhoan.CongTrinhID = item.CongTrinhID;
                    loaiKhoan.MucDauTuNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.MucDauTuNST);
                    loaiKhoan.MucDauTuNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.MucDauTuNSTW);
                    loaiKhoan.MucDauTuODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.MucDauTuODA);
                    loaiKhoan.LuyKeVonNamTruocNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.LuyKeVonNamTruocNST);
                    loaiKhoan.LuyKeVonNamTruocNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.LuyKeVonNamTruocNSTW);
                    loaiKhoan.LuyKeVonNamTruocODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.LuyKeVonNamTruocODA);
                    loaiKhoan.LuyKeVonNamTruocTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.LuyKeVonNamTruocTongCong);
                    loaiKhoan.NhuCauVonDauNamNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDauNamNST);
                    loaiKhoan.NhuCauVonDauNamODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDauNamODA);
                    loaiKhoan.NhuCauVonDauNamNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDauNamNSTW);
                    loaiKhoan.DieuChinhGiamNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhGiamNST);
                    loaiKhoan.DieuChinhGiamNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhGiamNSTW);
                    loaiKhoan.DieuChinhGiamODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhGiamODA);
                    loaiKhoan.DieuChinhGiamTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhGiamTongCong);
                    loaiKhoan.DieuChinhTangNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhTangNST);
                    loaiKhoan.DieuChinhTangNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhTangNSTW);
                    loaiKhoan.DieuChinhTangODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhTangODA);
                    loaiKhoan.DieuChinhTangTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.DieuChinhTangTongCong);
                    loaiKhoan.NhuCauVonDieuChinhNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDieuChinhNST);
                    loaiKhoan.NhuCauVonDieuChinhNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDieuChinhNSTW);
                    loaiKhoan.NhuCauVonDieuChinhODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDieuChinhODA);
                    loaiKhoan.NhuCauVonDieuChinhTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == listLoaiKhoan[i]).ToList().Sum(x => x.NhuCauVonDieuChinhTongCong);

                    listResult.Add(loaiKhoan);
                }
            }

            return listResult;
        }

        private List<NhuCauKeHoachVonChiTietDto> GetLoaiCongTrinh(Guid? LoaiKhoanId, List<NhuCauKeHoachVonChiTietDto> data)
        {
            List<NhuCauKeHoachVonChiTietDto> listResult = new List<NhuCauKeHoachVonChiTietDto>();

            var listLoaiCongTrinhId = data.Where(x => x.LoaiKhoanId == LoaiKhoanId).Select(x => x.LoaiCongTrinhId).Distinct().ToList();
            for (int i = 0; i < listLoaiCongTrinhId.Count; i++)
            {
                var item = data.FirstOrDefault(x => x.LoaiCongTrinhId == listLoaiCongTrinhId[i]);
                if (item != null)
                {
                    var loaiCongTrinh = new NhuCauKeHoachVonChiTietDto();
                    loaiCongTrinh.SoThuTu = "(" + (i + 1) + ")";
                    loaiCongTrinh.TongMucDauTu = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.TongMucDauTu);
                    loaiCongTrinh.TenCongTrinh = item.TenLoaiCongTrinh;
                    loaiCongTrinh.LoaiKhoanId = item.LoaiKhoanId;
                    loaiCongTrinh.LoaiCongTrinhId = item.LoaiCongTrinhId;
                    loaiCongTrinh.CongTrinhID = item.CongTrinhID;
                    loaiCongTrinh.MucDauTuNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.MucDauTuNST);
                    loaiCongTrinh.MucDauTuNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.MucDauTuNSTW);
                    loaiCongTrinh.MucDauTuODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.MucDauTuODA);
                    loaiCongTrinh.LuyKeVonNamTruocNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.LuyKeVonNamTruocNST);
                    loaiCongTrinh.LuyKeVonNamTruocNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.LuyKeVonNamTruocNSTW);
                    loaiCongTrinh.LuyKeVonNamTruocODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.LuyKeVonNamTruocODA);
                    loaiCongTrinh.LuyKeVonNamTruocTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.LuyKeVonNamTruocTongCong);
                    loaiCongTrinh.NhuCauVonDauNamNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDauNamNST);
                    loaiCongTrinh.NhuCauVonDauNamODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDauNamODA);
                    loaiCongTrinh.NhuCauVonDauNamNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDauNamNSTW);
                    loaiCongTrinh.DieuChinhGiamNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhGiamNST);
                    loaiCongTrinh.DieuChinhGiamNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhGiamNSTW);
                    loaiCongTrinh.DieuChinhGiamODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhGiamODA);
                    loaiCongTrinh.DieuChinhGiamTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhGiamTongCong);
                    loaiCongTrinh.DieuChinhTangNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhTangNST);
                    loaiCongTrinh.DieuChinhTangNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhTangNSTW);
                    loaiCongTrinh.DieuChinhTangODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhTangODA);
                    loaiCongTrinh.DieuChinhTangTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.DieuChinhTangTongCong);
                    loaiCongTrinh.NhuCauVonDieuChinhNST = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDieuChinhNST);
                    loaiCongTrinh.NhuCauVonDieuChinhNSTW = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDieuChinhNSTW);
                    loaiCongTrinh.NhuCauVonDieuChinhODA = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDieuChinhODA);
                    loaiCongTrinh.NhuCauVonDieuChinhTongCong = data.Where(x => x.CongTrinhID != Guid.Empty && x.LoaiKhoanId == LoaiKhoanId && x.LoaiCongTrinhId == listLoaiCongTrinhId[i]).ToList().Sum(x => x.NhuCauVonDieuChinhTongCong);
                    listResult.Add(loaiCongTrinh);
                }
            }

            return listResult;
        }

        private List<NhuCauKeHoachVonChiTietDto> SetSumDetailReport(List<NhuCauKeHoachVonChiTietDto> data)
        {
            List<NhuCauKeHoachVonChiTietDto> sumObject = new List<NhuCauKeHoachVonChiTietDto>();
            NhuCauKeHoachVonChiTietDto obj = new NhuCauKeHoachVonChiTietDto();

            foreach (var item in data)
            {
                obj.TongMucDauTu += item.TongMucDauTu;
                obj.MucDauTuNST += item.MucDauTuNST;
                obj.MucDauTuNSTW += item.MucDauTuNSTW;
                obj.LuyKeVonNamTruocTongCong += item.LuyKeVonNamTruocTongCong;
                obj.LuyKeVonNamTruocNST += item.LuyKeVonNamTruocNST;
                obj.LuyKeVonNamTruocNSTW += item.LuyKeVonNamTruocNSTW;
                obj.NhuCauVonDauNamNSTW += item.NhuCauVonDauNamNSTW;
                obj.NhuCauVonDauNamNST += item.NhuCauVonDauNamNST;
                obj.NhuCauVonDieuChinhNST += item.NhuCauVonDieuChinhNST;
                obj.NhuCauVonDieuChinhNSTW += item.NhuCauVonDieuChinhNSTW;
                obj.DieuChinhTangNST += item.DieuChinhTangNST;
                obj.DieuChinhGiamNST += item.DieuChinhGiamNST;
                obj.DieuChinhTangNSTW += item.DieuChinhTangNSTW;
                obj.DieuChinhGiamNSTW += item.DieuChinhGiamNSTW;
            }
            sumObject.Add(obj);
            return sumObject;
        }

        [HttpGet]
        public async Task<ResultExportDto> ExportDieuChinhHangNamByNhuCauKeHoachVonID(Guid nhuCauKeHoachVonID)
        {
            List<NhuCauKeHoachVonChiTietDto> list = new List<NhuCauKeHoachVonChiTietDto>();
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == nhuCauKeHoachVonID).ToList();
                if (items != null && items.Count > 0)
                {
                    items.ForEach(o =>
                    {
                        if (!o.IsDeleteDieuChinh)
                        {
                            var obj = ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(o);
                            var congTrinh = _congTrinhAppService.GetCongTrinhDetailAsync(o.CongTrinhID).Result;
                            obj.LuyKeKhoiLuongNamTruocTongCong = obj.LuyKeKhoiLuongNamTruocNST + obj.LuyKeKhoiLuongNamTruocNSTW + obj.LuyKeKhoiLuongNamTruocODA;
                            obj.LuyKeVonNamTruocTongCong = obj.LuyKeVonNamTruocNST + obj.LuyKeVonNamTruocNSTW + obj.LuyKeVonNamTruocODA;
                            obj.NhuCauVonDauNamTongCong = obj.NhuCauVonDauNamNST + obj.NhuCauVonDauNamNSTW + obj.NhuCauVonDauNamODA;
                            obj.DieuChinhGiamTongCong = obj.DieuChinhGiamNST + obj.DieuChinhGiamNSTW + obj.DieuChinhGiamODA;
                            obj.DieuChinhTangTongCong = obj.DieuChinhTangNST + obj.DieuChinhTangNSTW + obj.DieuChinhTangODA;
                            obj.NhuCauVonDieuChinhTongCong = obj.NhuCauVonDieuChinhNST + obj.NhuCauVonDieuChinhNSTW + obj.NhuCauVonDieuChinhODA;
                            obj.STT = list.Count + 1;
                            obj.TenCongTrinh = congTrinh.TenCongTrinh;
                            obj.SoQuyetDinh = congTrinh.SoQuyetDinhDauTu;
                            obj.TongMucDauTu = congTrinh.TongMucDauTu ?? 0;
                            obj.TenLoaiKhoan = congTrinh.TenLoaiKhoan;
                            obj.TenLoaiCongTrinh = congTrinh.TenLoaiCongTrinh;
                            list.Add(obj);
                        }

                    });
                }
            }
            string temFileName = "baocaoncvdieuchinhhangnamTemplate.xlsx";
            ResultExportDto result = await ExportExcelAsync(list, nhuCauKeHoachVonID, temFileName);
            return result;
        }

        [HttpGet]
        public async Task<ResultExportDto> ExportDieuChinhTrungHanByNhuCauKeHoachVonID(Guid nhuCauKeHoachVonID)
        {
            List<NhuCauKeHoachVonChiTietDto> list = new List<NhuCauKeHoachVonChiTietDto>();
            var items = await _iNhuCauKeHoachVonChiTietRepository.GetListAsync();
            if (items != null && items.Count > 0)
            {
                items = items.Where(x => x.IsDeleted == false && x.NhuCauKeHoachVonID == nhuCauKeHoachVonID).ToList();
                if (items != null && items.Count > 0)
                {
                    items.ForEach(o =>
                    {
                        if (!o.IsDeleteDieuChinh)
                        {
                            var obj = ObjectMapper.Map<NhuCauKeHoachVonChiTiet, NhuCauKeHoachVonChiTietDto>(o);
                            var congTrinh = _congTrinhAppService.GetCongTrinhDetailAsync(o.CongTrinhID).Result;
                            obj.LuyKeKhoiLuongNamTruocTongCong = obj.LuyKeKhoiLuongNamTruocNST + obj.LuyKeKhoiLuongNamTruocNSTW + obj.LuyKeKhoiLuongNamTruocODA;
                            obj.LuyKeVonNamTruocTongCong = obj.LuyKeVonNamTruocNST + obj.LuyKeVonNamTruocNSTW + obj.LuyKeVonNamTruocODA;
                            obj.NhuCauVonDauNamTongCong = obj.NhuCauVonDauNamNST + obj.NhuCauVonDauNamNSTW + obj.NhuCauVonDauNamODA;
                            obj.DieuChinhGiamTongCong = obj.DieuChinhGiamNST + obj.DieuChinhGiamNSTW + obj.DieuChinhGiamODA;
                            obj.DieuChinhTangTongCong = obj.DieuChinhTangNST + obj.DieuChinhTangNSTW + obj.DieuChinhTangODA;
                            obj.NhuCauVonDieuChinhTongCong = obj.NhuCauVonDieuChinhNST + obj.NhuCauVonDieuChinhNSTW + obj.NhuCauVonDieuChinhODA;
                            obj.STT = list.Count + 1;
                            obj.TenCongTrinh = congTrinh.TenCongTrinh;
                            obj.SoQuyetDinh = congTrinh.SoQuyetDinhDauTu;
                            obj.TongMucDauTu = congTrinh.TongMucDauTu ?? 0;
                            obj.TenLoaiCongTrinh = congTrinh.TenLoaiCongTrinh;
                            obj.TenLoaiKhoan = congTrinh.TenLoaiKhoan;
                            list.Add(obj);
                        }

                    });
                }
            }
            string temFileName = "baocaoncvdieuchinhtrunghanTemplate.xlsx";
            ResultExportDto result = await ExportExcelAsync(list, nhuCauKeHoachVonID, temFileName);
            return result;
        }
        #endregion
    }
}