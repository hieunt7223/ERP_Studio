using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using xdcb.QuanLyVon.NhuCauKeHoachVon.Dtos;

namespace xdcb.QuanLyVon.NhuCauKeHoachVons
{
    /// <summary>
    /// Generated IAppService for Table : NhuCauKeHoachVon.
    /// </summary>
    public interface INhuCauKeHoachVonAppService : IApplicationService
    {
        #region Generated By Column

        Task<List<NhuCauKeHoachVonDto>> GetListAsync();

        Task<NhuCauKeHoachVonDto> GetAsync(Guid id);

        Task<NhuCauKeHoachVonDto> Create(CreateUpdateNhuCauKeHoachVonDto input);

        Task<NhuCauKeHoachVonDto> Update(Guid id, CreateUpdateNhuCauKeHoachVonDto input);

        Task Delete(Guid id);

        Task<List<NhuCauKeHoachVonDto>> GetListByChuDauTuIDAsync(Guid id);

        Task DeleteByChuDauTuID(Guid id);

        #endregion Generated By Column

        #region Property

        Task<List<NhuCauKeHoachVonDto>> GetSearchData(int nam, string loaikehoach, string tenkehoach, Guid chuDauTuId);

        Task<NhuCauKeHoachVonDto> GetNotificationIsNew(string tenKeHoach, string loaikehoach, int nam, Guid chuDauTuID);

        Task DeleteDataDieuChinh(Guid id);

        Task<List<int>> GetListNamByHangNam(Guid chuDauTuID);

        Task<PagedResultDto<NhuCauKeHoachVonDto>> SearchAsync(NhuCauKeHoachVonConditionSearch condition);

        Task<NhuCauKeHoachVonDto> GetDataTrungHanDauNam(int nam, Guid chuDauTuID);

        Task<List<int>> GetObjectYear();

        Task<List<NhuCauKeHoachVonDto>> GetGroupData(int nam, string loaikehoach, string tenkehoach);

        Task<List<int>> GetListNamByTrungHan(Guid chuDauTuID);

        Task<NhuCauKeHoachVonDto> GetHangNambyYearAsync(int Year);

        #endregion Property
    }
}