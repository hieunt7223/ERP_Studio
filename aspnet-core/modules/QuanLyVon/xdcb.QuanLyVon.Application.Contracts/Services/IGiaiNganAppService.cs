using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using xdcb.QuanLyVon.GiaiNgan.Dtos;

namespace xdcb.QuanLyVon.GiaiNgans
{
    /// <summary>
    /// Generated IAppService for Table : GiaiNgan.
    /// </summary>
    public interface IGiaiNganAppService : IApplicationService
    {
        #region Generated By Column

        Task<List<GiaiNganDto>> GetListAsync();

        Task<GiaiNganDto> GetAsync(Guid id);

        Task<GiaiNganDto> Create(CreateUpdateGiaiNganDto input);

        Task<GiaiNganDto> Update(Guid id, CreateUpdateGiaiNganDto input);

        Task Delete(Guid id);

        Task<List<GiaiNganDto>> GetListByChuDauTuIdAsync(Guid id);

        Task DeleteByChuDauTuId(Guid id);

        #endregion

        #region Property

        Task<List<GiaiNganDto>> GetSearchData(int nam, bool? isKeHoachKeoDai, Guid chuDauTuId);

        Task<List<GiaiNganDto>> GetGroupData(int nam, bool? isKeHoachKeoDai, Guid chuDauTuId);

        Task<GiaiNganDto> GetNotificationIsNew(int nam, bool isKeHoachKeoDai, string tenKeHoach, int quyThang, Guid chuDauTuId);

        Task<List<int>> GetObjectYear();

        Task<PagedResultDto<GiaiNganDto>> SearchAsync(GiaiNganConditionSearch condition);
        #endregion Property
    }
}